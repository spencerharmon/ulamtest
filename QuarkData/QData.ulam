/*
Pattern to side affect data members in subclass with accessor functions in parent class returning reference type.
*/
quark QData{
  typedef EventWindow.SiteNum SiteNum;
  EventWindow ew;
  Random r;
  DebugUtils du;
  Unsigned bar;
  virtual Unsigned & virt();
  virtual String name();
  Void do(){
    for(SiteNum i = 1; i <=40; ++i){
      Atom a = ew[i];
      if(a as QData){
        a.virt()++;
        ew[i] = a.atomof;
      }
    }
    du.print(self.name());
    du.print(self.virt());
  }
  Void behave(){}
}
ulam 2;


/** Sample SiteVisitor implementation.  SiteVisitorByType could be
    used for functionality similar to \c WindowServices, though it is
    not a drop-in replacemnt.

    \sa WindowServices

    \author Dave Ackley
    \license lgpl
 */
transient SiteVisitorByID : SiteVisitor {
  typedef EventWindow.SiteNum SiteNum;
  AtomUtils au;
	EventWindow ew;

  typedef Unsigned(10) ID;
  typedef Unsigned(16) ElementType;
  typedef WindowScanner.Category Category;
  constant Unsigned cCATEGORY_COUNT = Category.maxof + 1;// XXX Wish it was: WindowScanner.cCATEGORY_COUNT;

  ID mID[cCATEGORY_COUNT];
  ElementType mType[cCATEGORY_COUNT];
  Bool mInUse[cCATEGORY_COUNT];

  Void reset() {
    for (Unsigned i = 0; i < cCATEGORY_COUNT; ++i) 
      unsetType((Category) i);
  }
  
  Void setType(Category c, ElementType et) {
    mType[c] = et;
    mInUse[c] = true;
  }

  Void setID(Category c, ID id) {
    mID[c] = id;
    mInUse[c] = true;
  }

  Void unsetType(Category c) {
    mInUse[c] = false;
    mType[c] = 0;
  }

  ID getID(SiteNum sn){
	Atom a = ew[sn];
	if(a as Nucleus){
		return a.id;
	}
	if(a as Gene){
		return a.id;
	}
	else{
		return 0;
	}
  }

  virtual Void visit(WindowScanner& wsrv, Atom & a, SiteNum sn) 
  {
    ElementType et = (ElementType) au.getType(a);
    ID id = getID(sn);
    for (Unsigned i = 0; i < cCATEGORY_COUNT; ++i)
      if (mInUse[i] && mType[i] == et && (ID) mID[i] == (ID) id)
        wsrv.categorize(sn, (Category) i);
  }
}

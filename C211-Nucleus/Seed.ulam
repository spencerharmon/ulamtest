//ALTERATION IS FUTILE: THIS FILE AUTOMATICALLY GENERATED FROM Seed.splat
//CREATED "Sat Dec 29 20:37:51 2018 GMT" BY /usr/bin/vendor_perl/splattr FOR spencer
//BEGIN Seed.ulam (in ./.splatgen)

transient SPLATKeyState_10Seed_At : SPLATKeyStateSelf {
} // transient SPLATKeyState_10Seed_At
transient SPLATKeyState_10Seed_Underline : SPLATKeyStateEmpty {
} // transient SPLATKeyState_10Seed_Underline
transient SPLATKeyState_10Seed_c : SPLATKeyState {
  // accept the futility of changing Content to Primer.
  Void change(SPLATRuleSet & splATTROoB__rs, SN splATTROoB__cursn, Atom & splATTROoB__curatom) {
   ew[splATTROoB__cursn] = Primer.instanceof;
  }
} // transient SPLATKeyState_10Seed_c
transient SPLATKeyState_10Seed_i : SPLATKeyState {
  // change i isa InnerMembrane 
  Void change(SPLATRuleSet & splATTROoB__rs, SN splATTROoB__cursn, Atom & splATTROoB__curatom) {
   ew[splATTROoB__cursn] = InnerMembrane.instanceof;
  }
} // transient SPLATKeyState_10Seed_i
transient SPLATKeyState_10Seed_o : SPLATKeyState {
  // change o isa OuterMembrane 
  Void change(SPLATRuleSet & splATTROoB__rs, SN splATTROoB__cursn, Atom & splATTROoB__curatom) {
   ew[splATTROoB__cursn] = OuterMembrane.instanceof;
  }
} // transient SPLATKeyState_10Seed_o

transient SPLATRuleSet_10Seed : SPLATRuleSet {
  SPLATKeyState_10Seed_At key_At;
  SPLATKeyState_10Seed_Underline key_Underline;
  SPLATKeyState_10Seed_c key_c;
  SPLATKeyState_10Seed_i key_i;
  SPLATKeyState_10Seed_o key_o;
  virtual Void reset() {
    super.reset();
    key_At.define('@');
    key_Underline.define('_');
    key_c.define('c');
    key_i.define('i');
    key_o.define('o');
  }
  virtual Void beginSiteEval() {
    super.beginSiteEval();
    key_At.beginSiteEval();
    key_Underline.beginSiteEval();
    key_c.beginSiteEval();
    key_i.beginSiteEval();
    key_o.beginSiteEval();
  }
  virtual SPLATKeyState & getKeyState(ASCII key) {
    which (key) {
    case '@': { return key_At; }
    case '_': { return key_Underline; }
    case 'c': { return key_c; }
    case 'i': { return key_i; }
    case 'o': { return key_o; }
    }
    return super.getKeyState(key);
  }

  virtual Bool evaluateRules() {
    SPLATRuleDriver pd;
    //                 
    //  _____     ooooo
    //  _____     oiiio
    //  __@__ ->  oicio
    //  _____     oiiio
    //  _____     ooooo
    if (pd.evaluateRule(self, "\000@\001_\002_\003_\004_\005_\006_\007_\010_\011_\012_\013_\014_\015_\016_\017_\020_\021_\022_\023_\024_\031_\032_\033_\034_\377\000c\001i\002i\003i\004i\005i\006i\007i\010i\011o\012o\013o\014o\015o\016o\017o\020o\021o\022o\023o\024o\031o\032o\033o\034o\376"))
      return true;
    return false;
  }
} // SPLATRuleSet_10Seed

/** 
  \color #c0c
 */
element Seed : SPLATInstance {
  // Data members
  virtual Bool evaluateRuleSets() {
    {
      SPLATRuleSet_10Seed rs;
      if (rs.evaluateRules()) return true;
    }
    return false;   // We got nothing
  }

} // element Seed

//END Seed.ulam
